{"ast":null,"code":"import _classCallCheck from\"/home/osroot/Desktop/host/contacts-front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/osroot/Desktop/host/contacts-front/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/osroot/Desktop/host/contacts-front/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/osroot/Desktop/host/contacts-front/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{Link}from'react-router-dom';import escapeRegExp from'escape-string-regexp';// import sortBy from 'sort-by'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListContacts=/*#__PURE__*/function(_Component){_inherits(ListContacts,_Component);var _super=_createSuper(ListContacts);function ListContacts(){var _this;_classCallCheck(this,ListContacts);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:''};_this.updateQuery=function(query){_this.setState({query:query.trim()});};_this.clearQuery=function(){_this.setState({query:''});};return _this;}_createClass(ListContacts,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,contacts=_this$props.contacts,onDeleteContact=_this$props.onDeleteContact;var query=this.state.query;var showingContacts;if(query){var match=new RegExp(escapeRegExp(query),'i');showingContacts=contacts.filter(function(contact){return match.test(contact.name);});}else{showingContacts=contacts;}// showingContacts.sort(sortBy('name'))\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"list-contacts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-contacts-top\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"search-contacts\",type:\"text\",placeholder:\"Search contacts\",value:query,onChange:function onChange(event){return _this2.updateQuery(event.target.value);}}),/*#__PURE__*/_jsx(Link,{to:\"/create\",className:\"add-contact\",children:\"Add Contact\"})]}),showingContacts.length!==contacts.length&&/*#__PURE__*/_jsxs(\"div\",{className:\"showing-contacts\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Now showing \",showingContacts.length,\" of \",contacts.length,\" total\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:this.clearQuery,children:\"Show all\"})]}),/*#__PURE__*/_jsx(\"ol\",{className:\"contact-list\",children:showingContacts.map(function(contact){return/*#__PURE__*/_jsxs(\"li\",{className:\"contact-list-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contact-avatar\",style:{backgroundImage:\"url(\".concat(contact.avatarURL,\")\")}}),/*#__PURE__*/_jsxs(\"div\",{className:\"contact-details\",children:[/*#__PURE__*/_jsx(\"p\",{children:contact.name}),/*#__PURE__*/_jsx(\"p\",{children:contact.email})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onDeleteContact(contact);},className:\"contact-remove\",children:\"Remove\"})]},contact.id);})})]});}}]);return ListContacts;}(Component);export default ListContacts;","map":{"version":3,"names":["React","Component","Link","escapeRegExp","ListContacts","state","query","updateQuery","setState","trim","clearQuery","props","contacts","onDeleteContact","showingContacts","match","RegExp","filter","contact","test","name","event","target","value","length","map","backgroundImage","avatarURL","email","id"],"sources":["/home/osroot/Desktop/host/contacts-front/src/ListContacts.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport escapeRegExp from 'escape-string-regexp'\n// import sortBy from 'sort-by'\n\nclass ListContacts extends Component {\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onDeleteContact: PropTypes.func.isRequired\n  }\n\n  state = {\n    query: ''\n  }\n\n  updateQuery = (query) => {\n    this.setState({ query: query.trim() })\n  }\n\n  clearQuery = () => {\n    this.setState({ query: '' })\n  }\n\n  render() {\n    const { contacts, onDeleteContact } = this.props\n    const { query } = this.state\n\n    let showingContacts\n    if (query) {\n      const match = new RegExp(escapeRegExp(query), 'i')\n      showingContacts = contacts.filter((contact) => match.test(contact.name))\n    } else {\n      showingContacts = contacts\n    }\n\n    // showingContacts.sort(sortBy('name'))\n\n    return (\n      <div className='list-contacts'>\n        <div className='list-contacts-top'>\n          <input\n            className='search-contacts'\n            type='text'\n            placeholder='Search contacts'\n            value={query}\n            onChange={(event) => this.updateQuery(event.target.value)}\n          />\n          <Link\n            to='/create'\n            className='add-contact'\n          >Add Contact</Link>\n        </div>\n\n        {showingContacts.length !== contacts.length && (\n          <div className='showing-contacts'>\n            <span>Now showing {showingContacts.length} of {contacts.length} total</span>\n            <button onClick={this.clearQuery}>Show all</button>\n          </div>\n        )}\n\n        <ol className='contact-list'>\n          {showingContacts.map((contact) => (\n            <li key={contact.id} className='contact-list-item'>\n              <div className='contact-avatar' style={{\n                backgroundImage: `url(${contact.avatarURL})`\n              }}/>\n              <div className='contact-details'>\n                <p>{contact.name}</p>\n                <p>{contact.email}</p>\n              </div>\n              <button onClick={() => onDeleteContact(contact)} className='contact-remove'>\n                Remove\n              </button>\n            </li>\n          ))}\n        </ol>\n      </div>\n    )\n  }\n}\n\nexport default ListContacts\n"],"mappings":"weAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,aAAP,KAAyB,sBAAzB,CACA;2FAEMC,a,mVAMJC,K,CAAQ,CACNC,KAAK,CAAE,EADD,C,OAIRC,W,CAAc,SAACD,KAAD,CAAW,CACvB,MAAKE,QAAL,CAAc,CAAEF,KAAK,CAAEA,KAAK,CAACG,IAAN,EAAT,CAAd,EACD,C,OAEDC,U,CAAa,UAAM,CACjB,MAAKF,QAAL,CAAc,CAAEF,KAAK,CAAE,EAAT,CAAd,EACD,C,8DAED,iBAAS,iBACP,gBAAsC,KAAKK,KAA3C,CAAQC,QAAR,aAAQA,QAAR,CAAkBC,eAAlB,aAAkBA,eAAlB,CACA,GAAQP,MAAR,CAAkB,KAAKD,KAAvB,CAAQC,KAAR,CAEA,GAAIQ,gBAAJ,CACA,GAAIR,KAAJ,CAAW,CACT,GAAMS,MAAK,CAAG,GAAIC,OAAJ,CAAWb,YAAY,CAACG,KAAD,CAAvB,CAAgC,GAAhC,CAAd,CACAQ,eAAe,CAAGF,QAAQ,CAACK,MAAT,CAAgB,SAACC,OAAD,QAAaH,MAAK,CAACI,IAAN,CAAWD,OAAO,CAACE,IAAnB,CAAb,EAAhB,CAAlB,CACD,CAHD,IAGO,CACLN,eAAe,CAAGF,QAAlB,CACD,CAED;AAEA,mBACE,aAAK,SAAS,CAAC,eAAf,wBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,cACE,SAAS,CAAC,iBADZ,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,iBAHd,CAIE,KAAK,CAAEN,KAJT,CAKE,QAAQ,CAAE,kBAACe,KAAD,QAAW,OAAI,CAACd,WAAL,CAAiBc,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX,EALZ,EADF,cAQE,KAAC,IAAD,EACE,EAAE,CAAC,SADL,CAEE,SAAS,CAAC,aAFZ,yBARF,GADF,CAeGT,eAAe,CAACU,MAAhB,GAA2BZ,QAAQ,CAACY,MAApC,eACC,aAAK,SAAS,CAAC,kBAAf,wBACE,uCAAmBV,eAAe,CAACU,MAAnC,QAA+CZ,QAAQ,CAACY,MAAxD,YADF,cAEE,eAAQ,OAAO,CAAE,KAAKd,UAAtB,sBAFF,GAhBJ,cAsBE,WAAI,SAAS,CAAC,cAAd,UACGI,eAAe,CAACW,GAAhB,CAAoB,SAACP,OAAD,qBACnB,YAAqB,SAAS,CAAC,mBAA/B,wBACE,YAAK,SAAS,CAAC,gBAAf,CAAgC,KAAK,CAAE,CACrCQ,eAAe,eAASR,OAAO,CAACS,SAAjB,KADsB,CAAvC,EADF,cAIE,aAAK,SAAS,CAAC,iBAAf,wBACE,mBAAIT,OAAO,CAACE,IAAZ,EADF,cAEE,mBAAIF,OAAO,CAACU,KAAZ,EAFF,GAJF,cAQE,eAAQ,OAAO,CAAE,yBAAMf,gBAAe,CAACK,OAAD,CAArB,EAAjB,CAAiD,SAAS,CAAC,gBAA3D,oBARF,GAASA,OAAO,CAACW,EAAjB,CADmB,EAApB,CADH,EAtBF,GADF,CAyCD,C,0BAzEwB5B,S,EA4E3B,cAAeG,aAAf"},"metadata":{},"sourceType":"module"}